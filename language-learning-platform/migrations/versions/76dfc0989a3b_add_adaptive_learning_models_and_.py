"""Add adaptive learning models and enhanced fields

Revision ID: 76dfc0989a3b
Revises: 88912834fbdb
Create Date: 2025-09-27 13:20:28.429681

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '76dfc0989a3b'
down_revision = '88912834fbdb'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('concept_mastery',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('skill_area', sa.String(length=50), nullable=False),
    sa.Column('concept', sa.String(length=100), nullable=False),
    sa.Column('proficiency_level', sa.String(length=20), nullable=False),
    sa.Column('mastery_status', sa.String(length=20), nullable=True),
    sa.Column('confidence_score', sa.Float(), nullable=True),
    sa.Column('average_score', sa.Float(), nullable=True),
    sa.Column('consistency_score', sa.Float(), nullable=True),
    sa.Column('activities_completed', sa.Integer(), nullable=True),
    sa.Column('total_attempts', sa.Integer(), nullable=True),
    sa.Column('successful_attempts', sa.Integer(), nullable=True),
    sa.Column('first_attempt_date', sa.DateTime(), nullable=True),
    sa.Column('last_activity_date', sa.DateTime(), nullable=True),
    sa.Column('mastery_achieved_date', sa.DateTime(), nullable=True),
    sa.Column('next_review_date', sa.DateTime(), nullable=True),
    sa.Column('review_interval_hours', sa.Integer(), nullable=True),
    sa.Column('review_count', sa.Integer(), nullable=True),
    sa.Column('performance_history', sa.JSON(), nullable=True),
    sa.Column('learning_difficulties', sa.JSON(), nullable=True),
    sa.Column('intervention_history', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'skill_area', 'concept', 'proficiency_level')
    )
    op.create_table('adaptive_learning_path_progress',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('learning_path_id', sa.Integer(), nullable=False),
    sa.Column('current_skill_focus', sa.String(length=50), nullable=True),
    sa.Column('current_concept', sa.String(length=100), nullable=True),
    sa.Column('current_difficulty', sa.String(length=20), nullable=True),
    sa.Column('total_concepts', sa.Integer(), nullable=True),
    sa.Column('concepts_mastered', sa.Integer(), nullable=True),
    sa.Column('concepts_proficient', sa.Integer(), nullable=True),
    sa.Column('concepts_learning', sa.Integer(), nullable=True),
    sa.Column('concepts_struggling', sa.Integer(), nullable=True),
    sa.Column('skill_progress', sa.JSON(), nullable=True),
    sa.Column('mastery_timeline', sa.JSON(), nullable=True),
    sa.Column('path_adaptations', sa.JSON(), nullable=True),
    sa.Column('difficulty_adjustments', sa.JSON(), nullable=True),
    sa.Column('focus_shifts', sa.JSON(), nullable=True),
    sa.Column('average_performance', sa.Float(), nullable=True),
    sa.Column('learning_velocity', sa.Float(), nullable=True),
    sa.Column('retention_rate', sa.Float(), nullable=True),
    sa.Column('session_count', sa.Integer(), nullable=True),
    sa.Column('total_time_spent_hours', sa.Float(), nullable=True),
    sa.Column('longest_streak_days', sa.Integer(), nullable=True),
    sa.Column('engagement_score', sa.Float(), nullable=True),
    sa.Column('estimated_completion_date', sa.DateTime(), nullable=True),
    sa.Column('predicted_final_level', sa.String(length=20), nullable=True),
    sa.Column('confidence_in_prediction', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['learning_path_id'], ['learning_paths.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'learning_path_id')
    )
    op.create_table('adaptive_learning_sessions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('session_id', sa.String(length=100), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('activity_id', sa.Integer(), nullable=False),
    sa.Column('learning_path_id', sa.Integer(), nullable=True),
    sa.Column('start_time', sa.DateTime(), nullable=True),
    sa.Column('end_time', sa.DateTime(), nullable=True),
    sa.Column('total_duration_minutes', sa.Float(), nullable=True),
    sa.Column('interaction_count', sa.Integer(), nullable=True),
    sa.Column('correct_answers', sa.Integer(), nullable=True),
    sa.Column('incorrect_answers', sa.Integer(), nullable=True),
    sa.Column('hint_requests', sa.Integer(), nullable=True),
    sa.Column('final_accuracy', sa.Float(), nullable=True),
    sa.Column('average_response_time', sa.Float(), nullable=True),
    sa.Column('time_efficiency', sa.Float(), nullable=True),
    sa.Column('consistency_score', sa.Float(), nullable=True),
    sa.Column('difficulty_adjustments', sa.JSON(), nullable=True),
    sa.Column('interventions_provided', sa.JSON(), nullable=True),
    sa.Column('content_adaptations', sa.JSON(), nullable=True),
    sa.Column('error_patterns', sa.JSON(), nullable=True),
    sa.Column('struggle_indicators', sa.JSON(), nullable=True),
    sa.Column('engagement_metrics', sa.JSON(), nullable=True),
    sa.Column('session_status', sa.String(length=20), nullable=True),
    sa.Column('completion_reason', sa.String(length=50), nullable=True),
    sa.Column('user_satisfaction_rating', sa.Integer(), nullable=True),
    sa.Column('generated_recommendations', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['activity_id'], ['activities.id'], ),
    sa.ForeignKeyConstraint(['learning_path_id'], ['learning_paths.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('session_id')
    )
    with op.batch_alter_table('activities', schema=None) as batch_op:
        batch_op.add_column(sa.Column('description', sa.Text(), nullable=True))
        batch_op.add_column(sa.Column('skill_area', sa.String(length=50), nullable=True))
        batch_op.add_column(sa.Column('concept_focus', sa.String(length=100), nullable=True))
        batch_op.add_column(sa.Column('is_adaptive', sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column('prerequisite_concepts', sa.JSON(), nullable=True))
        batch_op.add_column(sa.Column('mastery_threshold', sa.Float(), nullable=True))
        batch_op.add_column(sa.Column('is_validation', sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column('is_retry', sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column('is_reinforcement', sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column('parent_activity_id', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('generation_metadata', sa.JSON(), nullable=True))
        batch_op.add_column(sa.Column('adaptation_history', sa.JSON(), nullable=True))
        batch_op.create_foreign_key(None, 'activities', ['parent_activity_id'], ['id'])

    with op.batch_alter_table('learning_paths', schema=None) as batch_op:
        batch_op.add_column(sa.Column('is_adaptive', sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column('user_id', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('assessment_id', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('path_data', sa.JSON(), nullable=True))
        batch_op.add_column(sa.Column('adaptation_history', sa.JSON(), nullable=True))
        batch_op.add_column(sa.Column('priority_skills', sa.JSON(), nullable=True))
        batch_op.add_column(sa.Column('mastery_requirements', sa.JSON(), nullable=True))
        batch_op.add_column(sa.Column('generation_source', sa.String(length=50), nullable=True))
        batch_op.add_column(sa.Column('generation_metadata', sa.JSON(), nullable=True))
        batch_op.add_column(sa.Column('success_rate', sa.Float(), nullable=True))
        batch_op.add_column(sa.Column('average_completion_time', sa.Float(), nullable=True))
        batch_op.add_column(sa.Column('difficulty_rating', sa.Float(), nullable=True))
        batch_op.create_foreign_key(None, 'users', ['user_id'], ['id'])
        batch_op.create_foreign_key(None, 'proficiency_assessments', ['assessment_id'], ['id'])

    with op.batch_alter_table('user_activity_logs', schema=None) as batch_op:
        batch_op.add_column(sa.Column('session_id', sa.String(length=100), nullable=True))
        batch_op.add_column(sa.Column('skill_area', sa.String(length=50), nullable=True))
        batch_op.add_column(sa.Column('concept_focus', sa.String(length=100), nullable=True))
        batch_op.add_column(sa.Column('accuracy_score', sa.Float(), nullable=True))
        batch_op.add_column(sa.Column('time_efficiency', sa.Float(), nullable=True))
        batch_op.add_column(sa.Column('hint_count', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('error_patterns', sa.JSON(), nullable=True))
        batch_op.add_column(sa.Column('struggle_indicators', sa.JSON(), nullable=True))
        batch_op.add_column(sa.Column('interaction_timeline', sa.JSON(), nullable=True))
        batch_op.add_column(sa.Column('difficulty_adjustments', sa.JSON(), nullable=True))
        batch_op.add_column(sa.Column('interventions_triggered', sa.JSON(), nullable=True))
        batch_op.add_column(sa.Column('mastery_level', sa.String(length=20), nullable=True))
        batch_op.add_column(sa.Column('confidence_score', sa.Float(), nullable=True))
        batch_op.add_column(sa.Column('needs_review', sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column('next_review_date', sa.DateTime(), nullable=True))

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user_activity_logs', schema=None) as batch_op:
        batch_op.drop_column('next_review_date')
        batch_op.drop_column('needs_review')
        batch_op.drop_column('confidence_score')
        batch_op.drop_column('mastery_level')
        batch_op.drop_column('interventions_triggered')
        batch_op.drop_column('difficulty_adjustments')
        batch_op.drop_column('interaction_timeline')
        batch_op.drop_column('struggle_indicators')
        batch_op.drop_column('error_patterns')
        batch_op.drop_column('hint_count')
        batch_op.drop_column('time_efficiency')
        batch_op.drop_column('accuracy_score')
        batch_op.drop_column('concept_focus')
        batch_op.drop_column('skill_area')
        batch_op.drop_column('session_id')

    with op.batch_alter_table('learning_paths', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_column('difficulty_rating')
        batch_op.drop_column('average_completion_time')
        batch_op.drop_column('success_rate')
        batch_op.drop_column('generation_metadata')
        batch_op.drop_column('generation_source')
        batch_op.drop_column('mastery_requirements')
        batch_op.drop_column('priority_skills')
        batch_op.drop_column('adaptation_history')
        batch_op.drop_column('path_data')
        batch_op.drop_column('assessment_id')
        batch_op.drop_column('user_id')
        batch_op.drop_column('is_adaptive')

    with op.batch_alter_table('activities', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_column('adaptation_history')
        batch_op.drop_column('generation_metadata')
        batch_op.drop_column('parent_activity_id')
        batch_op.drop_column('is_reinforcement')
        batch_op.drop_column('is_retry')
        batch_op.drop_column('is_validation')
        batch_op.drop_column('mastery_threshold')
        batch_op.drop_column('prerequisite_concepts')
        batch_op.drop_column('is_adaptive')
        batch_op.drop_column('concept_focus')
        batch_op.drop_column('skill_area')
        batch_op.drop_column('description')

    op.drop_table('adaptive_learning_sessions')
    op.drop_table('adaptive_learning_path_progress')
    op.drop_table('concept_mastery')
    # ### end Alembic commands ###
