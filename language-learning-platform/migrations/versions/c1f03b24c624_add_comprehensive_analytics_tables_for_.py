"""add_comprehensive_analytics_tables_for_detailed_tracking

Revision ID: c1f03b24c624
Revises: d1cf010eeb2a
Create Date: 2025-09-24 15:18:28.882510

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'c1f03b24c624'
down_revision = 'd1cf010eeb2a'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('ai_generated_content',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('content_type', sa.String(length=50), nullable=False),
    sa.Column('content_data', sa.JSON(), nullable=False),
    sa.Column('generation_parameters', sa.JSON(), nullable=True),
    sa.Column('content_hash', sa.String(length=64), nullable=True),
    sa.Column('usage_count', sa.Integer(), nullable=True),
    sa.Column('effectiveness_score', sa.Float(), nullable=True),
    sa.Column('user_ratings', sa.JSON(), nullable=True),
    sa.Column('difficulty_level', sa.String(length=20), nullable=True),
    sa.Column('skill_area', sa.String(length=50), nullable=True),
    sa.Column('language_pair', sa.String(length=20), nullable=True),
    sa.Column('is_approved', sa.Boolean(), nullable=True),
    sa.Column('created_by_service', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('last_used_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('learning_streaks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('streak_type', sa.String(length=30), nullable=False),
    sa.Column('current_streak', sa.Integer(), nullable=True),
    sa.Column('longest_streak', sa.Integer(), nullable=True),
    sa.Column('last_activity_date', sa.Date(), nullable=True),
    sa.Column('streak_start_date', sa.Date(), nullable=True),
    sa.Column('activity_type', sa.String(length=50), nullable=True),
    sa.Column('skill_area', sa.String(length=50), nullable=True),
    sa.Column('milestone_reached', sa.JSON(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('started_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'streak_type', 'activity_type', 'skill_area', name='unique_user_streak')
    )
    op.create_table('performance_trends',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('trend_period', sa.String(length=20), nullable=False),
    sa.Column('period_start', sa.Date(), nullable=False),
    sa.Column('period_end', sa.Date(), nullable=False),
    sa.Column('activities_completed', sa.Integer(), nullable=True),
    sa.Column('average_score', sa.Float(), nullable=True),
    sa.Column('total_time_minutes', sa.Integer(), nullable=True),
    sa.Column('accuracy_rate', sa.Float(), nullable=True),
    sa.Column('improvement_rate', sa.Float(), nullable=True),
    sa.Column('vocabulary_progress', sa.Float(), nullable=True),
    sa.Column('grammar_progress', sa.Float(), nullable=True),
    sa.Column('reading_progress', sa.Float(), nullable=True),
    sa.Column('conversation_progress', sa.Float(), nullable=True),
    sa.Column('streak_count', sa.Integer(), nullable=True),
    sa.Column('badges_earned', sa.Integer(), nullable=True),
    sa.Column('challenges_completed', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'trend_period', 'period_start', name='unique_user_trend_period')
    )
    op.create_table('user_analytics',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('metric_type', sa.String(length=50), nullable=False),
    sa.Column('metric_value', sa.Float(), nullable=False),
    sa.Column('date_recorded', sa.Date(), nullable=False),
    sa.Column('activity_type', sa.String(length=50), nullable=True),
    sa.Column('skill_area', sa.String(length=50), nullable=True),
    sa.Column('difficulty_level', sa.String(length=20), nullable=True),
    sa.Column('session_count', sa.Integer(), nullable=True),
    sa.Column('additional_data', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_learning_timeline',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('event_type', sa.String(length=50), nullable=False),
    sa.Column('event_subtype', sa.String(length=50), nullable=True),
    sa.Column('event_data', sa.JSON(), nullable=True),
    sa.Column('related_id', sa.Integer(), nullable=True),
    sa.Column('related_type', sa.String(length=30), nullable=True),
    sa.Column('proficiency_change', sa.Float(), nullable=True),
    sa.Column('points_earned', sa.Integer(), nullable=True),
    sa.Column('skill_areas_affected', sa.JSON(), nullable=True),
    sa.Column('difficulty_level', sa.String(length=20), nullable=True),
    sa.Column('performance_score', sa.Float(), nullable=True),
    sa.Column('time_spent_minutes', sa.Integer(), nullable=True),
    sa.Column('milestone_achieved', sa.String(length=100), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('assessment_question_responses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('assessment_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('question_id', sa.String(length=50), nullable=False),
    sa.Column('question_text', sa.Text(), nullable=False),
    sa.Column('question_type', sa.String(length=30), nullable=True),
    sa.Column('correct_answer', sa.Text(), nullable=True),
    sa.Column('user_answer', sa.Text(), nullable=True),
    sa.Column('is_correct', sa.Boolean(), nullable=False),
    sa.Column('time_spent_seconds', sa.Integer(), nullable=True),
    sa.Column('confidence_level', sa.Integer(), nullable=True),
    sa.Column('difficulty_level', sa.String(length=20), nullable=True),
    sa.Column('skill_area', sa.String(length=50), nullable=True),
    sa.Column('points_earned', sa.Integer(), nullable=True),
    sa.Column('hints_used', sa.Integer(), nullable=True),
    sa.Column('attempts_before_correct', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['assessment_id'], ['proficiency_assessments.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('activity_question_responses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('activity_log_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('activity_id', sa.Integer(), nullable=False),
    sa.Column('question_index', sa.Integer(), nullable=False),
    sa.Column('question_text', sa.Text(), nullable=False),
    sa.Column('question_type', sa.String(length=30), nullable=True),
    sa.Column('user_answer', sa.Text(), nullable=True),
    sa.Column('correct_answer', sa.Text(), nullable=True),
    sa.Column('is_correct', sa.Boolean(), nullable=True),
    sa.Column('time_spent_seconds', sa.Integer(), nullable=True),
    sa.Column('hints_used', sa.Integer(), nullable=True),
    sa.Column('difficulty_level', sa.String(length=20), nullable=True),
    sa.Column('skill_area', sa.String(length=50), nullable=True),
    sa.Column('points_earned', sa.Integer(), nullable=True),
    sa.Column('ai_feedback', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['activity_id'], ['activities.id'], ),
    sa.ForeignKeyConstraint(['activity_log_id'], ['user_activity_logs.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('activity_question_responses')
    op.drop_table('assessment_question_responses')
    op.drop_table('user_learning_timeline')
    op.drop_table('user_analytics')
    op.drop_table('performance_trends')
    op.drop_table('learning_streaks')
    op.drop_table('ai_generated_content')
    # ### end Alembic commands ###
